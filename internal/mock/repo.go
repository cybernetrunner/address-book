// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/intarfaces.go

// Package mock_app is a generated GoMock package.
package mock_app

import (
	reflect "reflect"

	proto "github.com/cyneruxyz/address-book/gen/proto"
	gomock "github.com/golang/mock/gomock"
)

// MockStorage is a mock of Storage interface.
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage.
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance.
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// CreateItem mocks base method.
func (m *MockStorage) CreateItem(field *proto.AddressField) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateItem", field)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateItem indicates an expected call of CreateItem.
func (mr *MockStorageMockRecorder) CreateItem(field interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateItem", reflect.TypeOf((*MockStorage)(nil).CreateItem), field)
}

// DeleteItem mocks base method.
func (m *MockStorage) DeleteItem(phone *proto.Phone) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteItem", phone)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteItem indicates an expected call of DeleteItem.
func (mr *MockStorageMockRecorder) DeleteItem(phone interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteItem", reflect.TypeOf((*MockStorage)(nil).DeleteItem), phone)
}

// ReadItem mocks base method.
func (m *MockStorage) ReadItem(param string) ([]*proto.AddressField, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadItem", param)
	ret0, _ := ret[0].([]*proto.AddressField)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadItem indicates an expected call of ReadItem.
func (mr *MockStorageMockRecorder) ReadItem(param interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadItem", reflect.TypeOf((*MockStorage)(nil).ReadItem), param)
}

// UpdateItem mocks base method.
func (m *MockStorage) UpdateItem(phone *proto.Phone, replace *proto.AddressField) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateItem", phone, replace)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateItem indicates an expected call of UpdateItem.
func (mr *MockStorageMockRecorder) UpdateItem(phone, replace interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateItem", reflect.TypeOf((*MockStorage)(nil).UpdateItem), phone, replace)
}
